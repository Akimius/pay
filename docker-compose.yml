#version: '3.8'  the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion

# Volumes are symlinks from a local machine to a docker resource
# in this instruction ${SRC}:/var/www/html - ./${SRC} is a relative path to the docker-compose file

# Network description helps isolate the project, each service must list it

networks:
  srs:
    name: srs
services:
#  Composer
  composer:
    image: composer:2.6.3
    container_name: ${PROJECT_NAME}_composer # container_name - overwrites the name pre-generated by the docker
    volumes:
      - ${SRC}:/var/www/html
    working_dir: /var/www/html
    networks:
      - srs
# PHP
  php:
    build:
      context: . # directory to search for, means current directory
      dockerfile: ./services/php/php.dockerfile
    container_name: ${PROJECT_NAME}_php # container_name - overwrites the name pre-generated by the docker
    volumes:
      - ${SRC}:/var/www/html
#      - ./services/php/php-dev.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    networks:
      - srs
    environment:
      - PHP_IDE_CONFIG=serverName=${DEBUG_SERVER_NAME}

# Nginx
  # fastcgi_pass php:9000; in default.conf!!! php means php-container, 9000 - port number
  app:
    build:
      context: .
      dockerfile: ./services/nginx/nginx.dockerfile
    container_name: ${PROJECT_NAME}_nginx # container_name - overwrites the name pre-generated by the docker
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${SRC}:/var/www/html
    networks:
      - srs

  # Python
  python:
    image: python:3.9 # You can change this to any Python version you need
    container_name: ${PROJECT_NAME}_python
    volumes:
      - ${SRC}:/var/www/html
    working_dir: /var/www/html
    command: python3 /var/www/html/script.py # Customize with your Python entry point
    networks:
      - srs


#services:
#  php:
#    build:
#      context: .
#      dockerfile: ./services/php/php.dockerfile
#    container_name: php_zmq
#    volumes:
#      - ${SRC}:/var/www/html
#    working_dir: /var/www/html
#    depends_on:
#      - zmq
#    command: bash -c "php /var/www/html/publisher.php"
#
#  zmq:
#    image: ubuntu:20.04
#    container_name: zmq_server
#    expose:
#      - "5555"
#    ports:
#      - "5555:5555"
#    networks:
#      - srs

